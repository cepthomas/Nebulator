<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NBagOfUis</name>
    </assembly>
    <members>
        <member name="T:NBagOfUis.BarBar">
            <summary>The control.</summary>
        </member>
        <member name="T:NBagOfUis.BarBar.SnapType">
            <summary>User selection options.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._length">
            <summary>Total length.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._start">
            <summary>First valid point.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._end">
            <summary>Last valid point.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._current">
            <summary>Current time.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._lastXPos">
            <summary>For tracking mouse moves.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._toolTip">
            <summary>Tooltip for mousing.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._brush">
            <summary>The brush.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._penMarker">
            <summary>The pen.</summary>
        </member>
        <member name="F:NBagOfUis.BarBar._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.ZeroBased">
            <summary>Option for engineers instead of musicians.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.BeatsPerBar">
            <summary>Our signature. Only tested with 4.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.SubdivsPerBeat">
            <summary>Our resolution.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.Snap">
            <summary>How to snap.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.Length">
            <summary>Total length.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.Start">
            <summary>First valid point.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.End">
            <summary>Last valid point.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.Current">
            <summary>Where we be now.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.ProgressColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.MarkerColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.FontLarge">
            <summary>Big font.</summary>
        </member>
        <member name="P:NBagOfUis.BarBar.FontSmall">
            <summary>Baby font.</summary>
        </member>
        <member name="E:NBagOfUis.BarBar.CurrentTimeChanged">
            <summary>Value changed by user.</summary>
        </member>
        <member name="M:NBagOfUis.BarBar.#ctor">
            <summary>
            Normal constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.BarBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.BarBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the control.
            </summary>
        </member>
        <member name="M:NBagOfUis.BarBar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle selection operations.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.BarBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse position changes.
            </summary>
        </member>
        <member name="M:NBagOfUis.BarBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.BarBar.IncrementCurrent(System.Int32)">
            <summary>
            Change current time. 
            </summary>
            <param name="num">Subdivs/ticks.</param>
        </member>
        <member name="M:NBagOfUis.BarBar.GetSubdivFromMouse(System.Int32)">
            <summary>
            Convert x pos to subdiv.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:NBagOfUis.BarBar.Scale(NBagOfUis.BarSpan)">
            <summary>
            Map from time to UI pixels.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:NBagOfUis.BarSpan">
            <summary>Sort of like TimeSpan.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan.Zero">
            <summary>A useful constant.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan.OneSubdiv">
            <summary>A useful constant.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan._id">
            <summary>For hashing.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan._all_ids">
            <summary>Increment for unique value.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan._beatsPerBar">
            <summary>Global - set before using. Only tested with 4.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan._subdivsPerBeat">
            <summary>Global - set before using. Our resolution.</summary>
        </member>
        <member name="F:NBagOfUis.BarSpan._snapType">
            <summary>Global - set before using.</summary>
        </member>
        <member name="P:NBagOfUis.BarSpan.TotalSubdivs">
            <summary>The core.</summary>
        </member>
        <member name="P:NBagOfUis.BarSpan.Bar">
            <summary>The bar.</summary>
        </member>
        <member name="P:NBagOfUis.BarSpan.Beat">
            <summary>The beat.</summary>
        </member>
        <member name="P:NBagOfUis.BarSpan.Subdiv">
            <summary>The subdiv.</summary>
        </member>
        <member name="M:NBagOfUis.BarSpan.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor from args.
            </summary>
            <param name="bar"></param>
            <param name="beat"></param>
            <param name="subdiv"></param>
        </member>
        <member name="M:NBagOfUis.BarSpan.#ctor(System.Int32)">
            <summary>
            Constructor from args.
            </summary>
            <param name="subdivs"></param>
        </member>
        <member name="M:NBagOfUis.BarSpan.Reset">
            <summary>
            Hard reset.
            </summary>
        </member>
        <member name="M:NBagOfUis.BarSpan.Constrain(NBagOfUis.BarSpan,NBagOfUis.BarSpan)">
            <summary>
            Utility helper function.
            </summary>
            <param name="lower"></param>
            <param name="upper"></param>
        </member>
        <member name="M:NBagOfUis.BarSpan.Increment(System.Int32)">
            <summary>
            Update current value.
            </summary>
            <param name="subdivs">Number of subdivs.</param>
        </member>
        <member name="M:NBagOfUis.BarSpan.DoSnap(System.Int32)">
            <summary>
            Snap to closest boundary.
            </summary>
            <param name="subdiv"></param>
        </member>
        <member name="M:NBagOfUis.BarSpan.Format(System.Boolean)">
            <summary>
            Format a readable string.
            </summary>
            <param name="zeroBased"></param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.BarSpan.ToString">
            <summary>
            Format a readable string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NBagOfUis.ClickGrid">
            <summary>
            ClickGrid control.
            </summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._stateTypes">
            <summary>State enumeration.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._indicators">
            <summary>All the indicators.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._cols">
            <summary>Number of columns.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._rows">
            <summary>Number of rows.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._indWidth">
            <summary>Indicator geometry.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._indHeight">
            <summary>Indicator geometry.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._defaultForeBrush">
            <summary>Used for unspecified states.</summary>
        </member>
        <member name="F:NBagOfUis.ClickGrid._defaultBackBrush">
            <summary>Used for unspecified states.</summary>
        </member>
        <member name="E:NBagOfUis.ClickGrid.IndicatorEvent">
            <summary>ClickGrid value changed event.</summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.#ctor">
            <summary>
            Creates a new default control.
            </summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.ClickGrid_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.ClickGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.AddIndicator(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="id"></param>
        </member>
        <member name="M:NBagOfUis.ClickGrid.Show(System.Int32,System.Int32,System.Int32)">
            <summary>
            Normal construction.
            </summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.SetIndicator(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="state"></param>
        </member>
        <member name="M:NBagOfUis.ClickGrid.AddStateType(System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="state"></param>
            <param name="foreColor"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:NBagOfUis.ClickGrid.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the control.
            </summary>
        </member>
        <member name="M:NBagOfUis.ClickGrid.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.ClickGrid.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NBagOfUis.IndicatorEventArgs">
            <summary>
            Click event data.
            </summary>
        </member>
        <member name="T:NBagOfUis.Indicator">
            <summary>
            Everything about one indicator.
            </summary>
        </member>
        <member name="P:NBagOfUis.Indicator.Id">
            <summary>User tag.</summary>
        </member>
        <member name="P:NBagOfUis.Indicator.Text">
            <summary>The text.</summary>
        </member>
        <member name="P:NBagOfUis.Indicator.State">
            <summary>User tag.</summary>
        </member>
        <member name="T:NBagOfUis.IndicatorStateType">
            <summary>
            Describes one state.
            </summary>
        </member>
        <member name="P:NBagOfUis.IndicatorStateType.ForeBrush">
            <summary>The foreground brush/pen.</summary>
        </member>
        <member name="P:NBagOfUis.IndicatorStateType.BackBrush">
            <summary>The background brush.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._cpuPerf">
            <summary>Total usage.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._processesPerf">
            <summary>Logical processes.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._inited">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._timer">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._min">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._max">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._processesBuffs">
            <summary>Storage.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._cpuBuff">
            <summary>Storage.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._buffIndex">
            <summary>Storage.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._logicalProcessors">
            <summary>CPU info.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._pen">
            <summary>The pen.</summary>
        </member>
        <member name="F:NBagOfUis.CpuMeter._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.CpuMeter.Label">
            <summary>User can change.</summary>
        </member>
        <member name="P:NBagOfUis.CpuMeter.Enable">
            <summary> </summary>
        </member>
        <member name="P:NBagOfUis.CpuMeter.UpdateFreq">
            <summary>Default is 500 msec. Change if you like.</summary>
        </member>
        <member name="P:NBagOfUis.CpuMeter.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="M:NBagOfUis.CpuMeter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.CpuMeter.CpuMeter_Load(System.Object,System.EventArgs)">
            <summary>
            Initialize everything.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.CpuMeter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.CpuMeter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the volume meter.
            </summary>
        </member>
        <member name="M:NBagOfUis.CpuMeter.OnResize(System.EventArgs)">
            <summary>
            Update drawing area.
            </summary>
        </member>
        <member name="M:NBagOfUis.CpuMeter.SetBuffs">
            <summary>
            
            </summary>
        </member>
        <member name="M:NBagOfUis.CpuMeter.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.CpuMeter.InitPerf">
            <summary>
            Defer init as they are slow processes.
            </summary>
        </member>
        <member name="T:NBagOfUis.FilTree">
            <summary>
            Tree control with file type filters.
            </summary>
        </member>
        <member name="P:NBagOfUis.FilTree.RootDirs">
            <summary>Base path(s) for the tree.</summary>
        </member>
        <member name="P:NBagOfUis.FilTree.FilterExts">
            <summary>Show only these file types.</summary>
        </member>
        <member name="P:NBagOfUis.FilTree.SingleClickSelect">
            <summary>Generate event with single or double click.</summary>
        </member>
        <member name="E:NBagOfUis.FilTree.FileSelectedEvent">
            <summary>User has selected a file.</summary>
        </member>
        <member name="M:NBagOfUis.FilTree.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.FilTree.FilTree_Load(System.Object,System.EventArgs)">
            <summary>
            Initialize controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.Init">
            <summary>
            Populate everything from the properties.
            </summary>
        </member>
        <member name="M:NBagOfUis.FilTree.TreeView_NodeMouseClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Drill down through dirs/files.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.PopulateTreeView">
            <summary>
            Fill the tree.
            </summary>
        </member>
        <member name="M:NBagOfUis.FilTree.ShowDirectories(System.IO.DirectoryInfo[],System.Windows.Forms.TreeNode)">
            <summary>
            Recursively drill down through the directory structure and populate the tree.
            </summary>
            <param name="dirs"></param>
            <param name="parentNode"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.PopulateFiles(System.Windows.Forms.TreeNode)">
            <summary>
            Populate the file selector.
            </summary>
            <param name="node">Selected directory.</param>
        </member>
        <member name="M:NBagOfUis.FilTree.ListFiles_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Single click file selection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.ListFiles_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Double click file selection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.MenuFiles_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Populate the context menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.MenuFiles_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            Select the tags for this file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.TreeView_DrawNode(System.Object,System.Windows.Forms.DrawTreeNodeEventArgs)">
            <summary>
            See above.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.FilTree.FilTree_Resize(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:NBagOfUis.FilTree.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NBagOfUis.FilTree.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.FilTree.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NBagOfUis.GraphicsUtils">
            <summary>
            Static general utility functions.
            </summary>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.CreateIcon(System.String)">
            <summary>
            Create icon from a file.
            </summary>
            <param name="fn"></param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.CreateIcon(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Create icon from a bitmap.
            </summary>
            <param name="bmp"></param>
            <param name="size">Specific size or 0 for all common windows sizes.</param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.SaveIcon(System.Drawing.Icon,System.String)">
            <summary>
            Save to file.
            </summary>
            <param name="ico"></param>
            <param name="fn"></param>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.ConvertToGrayscale(System.Drawing.Bitmap)">
            <summary>
            De-colorize.
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.ResizeBitmap(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Resize the image to the specified width and height.
            </summary>
            <param name="bmp">The image to resize.</param>
            <param name="width">The width to resize to.</param>
            <param name="height">The height to resize to.</param>
            <returns>The resized image.</returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.ColorizeBitmap(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Colorize a bitmap. Mainly for beautifying glyphicons.
            </summary>
            <param name="original"></param>
            <param name="newcol"></param>
            <param name="replace">Optional source color to replace. Defaults to black.</param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.GetSequenceColor(System.Int32,System.Boolean)">
            <summary>
            Helper to get next contrast color in the sequence.
            From http://colorbrewer2.org qualitative.
            </summary>
            <param name="i"></param>
            <param name="dark">Dark or light series, usually dark.</param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.GraphicsUtils.HalfMix(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Mix two colors.
            </summary>
            <param name="one"></param>
            <param name="two"></param>
            <returns></returns>
        </member>
        <member name="T:NBagOfUis.KeyUtils">
            <summary>
            Static keyboard processing functions.
            </summary>
        </member>
        <member name="T:NBagOfUis.KeyUtils.KeyState">
            <summary>Api version of win32.</summary>
        </member>
        <member name="F:NBagOfUis.KeyUtils.KeyState.NotPressed">
            <summary>Nothing going on.</summary>
        </member>
        <member name="F:NBagOfUis.KeyUtils.KeyState.Pressed">
            <summary>Transient press.</summary>
        </member>
        <member name="F:NBagOfUis.KeyUtils.KeyState.Toggled">
            <summary>e.g. caps lock.</summary>
        </member>
        <member name="M:NBagOfUis.KeyUtils.TestForNumber_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Generic UI helper. Allows user to enter only integer or double values.
            s</summary>
            <param name="sender">Sender control.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:NBagOfUis.KeyUtils.TestForInteger_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Generic UI helper. Allows user to enter only integer values.
            </summary>
            <param name="sender">Sender control.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:NBagOfUis.KeyUtils.TestForAlphanumeric_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Generic UI helper. Allows user to enter only alphanumeric values.
            </summary>
            <param name="sender">Sender control.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:NBagOfUis.KeyUtils.KeyToChar(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
            <summary>General purpose decoder for keys. Because windows makes it kind of difficult.</summary>
            <param name="key"></param>
            <param name="modifiers"></param>
            <returns>Tuple of Converted char (0 if not convertible) and keyCode(s).</returns>
        </member>
        <member name="M:NBagOfUis.KeyUtils.GetKeyState(System.Windows.Forms.Keys)">
            <summary>Key state query. Based on https://stackoverflow.com/a/9356006. </summary>
            <param name="key">Which key.</param>
            <returns></returns>
        </member>
        <member name="T:NBagOfUis.MeterType">
            <summary>Display types.</summary>
        </member>
        <member name="T:NBagOfUis.Meter">
            <summary>
            Implements a rudimentary volume meter.
            </summary>
        </member>
        <member name="F:NBagOfUis.Meter._buff">
            <summary>Storage.</summary>
        </member>
        <member name="F:NBagOfUis.Meter._buffIndex">
            <summary>Storage.</summary>
        </member>
        <member name="F:NBagOfUis.Meter._pen">
            <summary>The pen.</summary>
        </member>
        <member name="F:NBagOfUis.Meter._brush">
            <summary>The brush.</summary>
        </member>
        <member name="F:NBagOfUis.Meter._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.Meter.Label">
            <summary>Optional label.</summary>
        </member>
        <member name="P:NBagOfUis.Meter.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.Meter.MeterType">
            <summary>How the meter responds.</summary>
        </member>
        <member name="P:NBagOfUis.Meter.Minimum">
            <summary>Minimum value. If Log type, this is in db - usually -60;</summary>
        </member>
        <member name="P:NBagOfUis.Meter.Maximum">
            <summary>Maximum value. If Log type, this is in db - usually +18.</summary>
        </member>
        <member name="P:NBagOfUis.Meter.Orientation">
            <summary>Meter orientation.</summary>
        </member>
        <member name="M:NBagOfUis.Meter.#ctor">
            <summary>
            Basic volume meter.
            </summary>
        </member>
        <member name="M:NBagOfUis.Meter.Meter_Load(System.Object,System.EventArgs)">
            <summary>
            Init stuff.
            </summary>
        </member>
        <member name="M:NBagOfUis.Meter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.Meter.AddValue(System.Double)">
            <summary>
            Add a new data point. If Log, this will convert for you.
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:NBagOfUis.Meter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the volume meter.
            </summary>
        </member>
        <member name="M:NBagOfUis.Meter.OnResize(System.EventArgs)">
            <summary>
            Update drawing area.
            </summary>
        </member>
        <member name="F:NBagOfUis.OptionsEditor._values">
            <summary>Working values so we don't destroy originals.</summary>
        </member>
        <member name="P:NBagOfUis.OptionsEditor.Values">
            <summary>The values to edit. Key is text, value is bool enable. Clone in case user cancels.</summary>
        </member>
        <member name="P:NBagOfUis.OptionsEditor.Title">
            <summary>Custom label.</summary>
        </member>
        <member name="P:NBagOfUis.OptionsEditor.AllowEdit">
            <summary>If true, user can add and delete values, otherwise just select.</summary>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.OptionsEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Initialization. If editing not allowed, adjust the ui.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.Add_Click(System.Object,System.EventArgs)">
            <summary>
            User is adding a new value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.Values_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            User might be removing a value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.OptionsEditor_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Collect list contents.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:NBagOfUis.OptionsEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.OptionsEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NBagOfUis.Pan">
            <summary>
            Pan slider control
            </summary>
        </member>
        <member name="F:NBagOfUis.Pan._value">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pan._brush">
            <summary>The brush.</summary>
        </member>
        <member name="F:NBagOfUis.Pan._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.Pan.Value">
            <summary>The current Pan setting.</summary>
        </member>
        <member name="P:NBagOfUis.Pan.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="E:NBagOfUis.Pan.ValueChanged">
            <summary>True when pan value changed.</summary>
        </member>
        <member name="M:NBagOfUis.Pan.#ctor">
            <summary>
            Creates a new PanSlider control.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pan.Pan_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.Pan.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.Pan.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw control.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pan.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pan.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pan.SetValueFromMouse(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Calculate position.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.Pan.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle the nudge key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NBagOfUis.Taper">
            <summary></summary>
        </member>
        <member name="T:NBagOfUis.Pot">
            <summary>
            Control potentiometer.
            </summary>
        </member>
        <member name="F:NBagOfUis.Pot._minimum">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._maximum">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._value">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._resolution">
            <summary>Restrict to discrete steps.</summary>
        </member>
        <member name="F:NBagOfUis.Pot._resetVal">
            <summary>If user resets. This is the first value assigned to Value.</summary>
        </member>
        <member name="F:NBagOfUis.Pot._beginDragValue">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._beginDragY">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._dragging">
            <summary> </summary>
        </member>
        <member name="F:NBagOfUis.Pot._pen">
            <summary>For drawing.</summary>
        </member>
        <member name="F:NBagOfUis.Pot._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Label">
            <summary>Name etc.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Taper">
            <summary>Taper.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Resolution">
            <summary>Per step resolution of this slider.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Minimum">
            <summary>Minimum Value of the slider.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Maximum">
            <summary>Maximum Value of the slider.</summary>
        </member>
        <member name="P:NBagOfUis.Pot.Value">
            <summary>The current value of the slider.</summary>
        </member>
        <member name="E:NBagOfUis.Pot.ValueChanged">
            <summary>Value changed event.</summary>
        </member>
        <member name="M:NBagOfUis.Pot.#ctor">
            <summary>
            Creates a new pot control.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.Pot_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.Pot.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.Pot.Rescale">
            <summary>
            If min or max or resolution changed by client.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the control.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse down event to allow changing value by dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse up event to allow changing value by dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse down event to allow changing value by dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Pot.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle the nudge key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NBagOfUis.PropertyGridEx">
            <summary>Extends the PropertyGrid to add some features.</summary>
        </member>
        <member name="P:NBagOfUis.PropertyGridEx.Dirty">
            <summary>Edited flag.</summary>
        </member>
        <member name="E:NBagOfUis.PropertyGridEx.PropertyGridExEvent">
            <summary>The property grid is reporting something.</summary>
        </member>
        <member name="T:NBagOfUis.PropertyGridEx.PropertyGridExEventArgs">
            <summary>General event for raising events not natively supported by the property grid.</summary>
        </member>
        <member name="P:NBagOfUis.PropertyGridEx.PropertyGridExEventArgs.EventType">
            <summary>General info.</summary>
        </member>
        <member name="P:NBagOfUis.PropertyGridEx.PropertyGridExEventArgs.EventData">
            <summary>General data.</summary>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.RaisePropertyGridExEvent(System.String,System.Object)">
            <summary>Children can call this to send something back to the host.</summary>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.AddButton(System.String,System.Drawing.Image,System.String,System.EventHandler)">
            <summary>Add a custom button to the property grid.</summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="tooltip"></param>
            <param name="onClick"></param>
            <returns>The button or null if failed.</returns>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.AddLabel(System.String,System.Drawing.Image,System.String)">
            <summary>Add a label to the property grid.</summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="tooltip"></param>
            <returns>The label or null if failed.</returns>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.AddSeparator">
            <summary>Add a separator to the property grid.</summary>
            <returns>The separator or null if failed.</returns>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.MoveSplitter(System.Int32)">
            <summary>Moves the vertical splitter.</summary>
            <param name="x"></param>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.ResizeDescriptionArea(System.Int32)">
            <summary>Alter the bottom description area.</summary>
            <param name="x">Number of lines to show.</param>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.ExpandGroup(System.String,System.Boolean)">
            <summary>Expand or collapse the group.</summary>
            <param name="groupName">Name of the group to act on.</param>
            <param name="expand">Expand or collapse.</param>
        </member>
        <member name="M:NBagOfUis.PropertyGridEx.ShowProperty(System.String,System.Boolean)">
            <summary>Show or hide a named property.</summary>
            <param name="which">Name of the property.</param>
            <param name="visible">True or false.</param>
        </member>
        <member name="F:NBagOfUis.Settings._fp">
            <summary>The fully  qualified file path.</summary>
        </member>
        <member name="M:NBagOfUis.Settings.Load(System.String,System.Type,System.String)">
            <summary>
            Create object from file.
            </summary>
            <param name="dir">Where the file lives.</param>
            <param name="t">Derived type please.</param>
            <param name="fn">The file name, default is settings.json.</param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.Settings.Save">
            <summary>
            Save object to file.
            </summary>
        </member>
        <member name="M:NBagOfUis.Settings.Edit(System.String)">
            <summary>
            Edit the properties in a dialog.
            </summary>
            <param name="title">To show.</param>
            <returns>List of tuples of name, category.</returns>
        </member>
        <member name="M:NBagOfUis.Settings.Cleanup">
            <summary>
            Remove duplicate and invalid file names.
            </summary>
        </member>
        <member name="T:NBagOfUis.Slider">
            <summary>
            Slider control.
            </summary>
        </member>
        <member name="F:NBagOfUis.Slider._value">
            <summary>Current value.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._minimum">
            <summary>Min value.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._maximum">
            <summary>Max value.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._resolution">
            <summary>Restrict to discrete steps.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._resetVal">
            <summary>If user resets. This is the first value assigned to Value.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._brush">
            <summary>The brush.</summary>
        </member>
        <member name="F:NBagOfUis.Slider._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Label">
            <summary>Optional label.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Orientation">
            <summary>Fader orientation</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Resolution">
            <summary>Per step resolution of this slider.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Minimum">
            <summary>Minimum Value of the slider.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Maximum">
            <summary>Maximum Value of the slider.</summary>
        </member>
        <member name="P:NBagOfUis.Slider.Value">
            <summary>The current value of the slider.</summary>
        </member>
        <member name="E:NBagOfUis.Slider.ValueChanged">
            <summary>Slider value changed event.</summary>
        </member>
        <member name="M:NBagOfUis.Slider.#ctor">
            <summary>
            Creates a new Slider control.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.Slider_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.Slider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.Rescale">
            <summary>
            If min or max or resolution changed by client.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the slider.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.Slider.SetValueFromMouse(System.Windows.Forms.MouseEventArgs)">
            <summary>
            ommon updater.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.Slider.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle the nudge key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NBagOfUis.TextViewer.Colors">
            <summary>The colors to display when text is matched.</summary>
        </member>
        <member name="P:NBagOfUis.TextViewer.MaxText">
            <summary>Limit the size. Set to 0 to disable.</summary>
        </member>
        <member name="P:NBagOfUis.TextViewer.BackColor">
            <summary>Cosmetics.</summary>
        </member>
        <member name="P:NBagOfUis.TextViewer.Font">
            <summary>Cosmetics.</summary>
        </member>
        <member name="P:NBagOfUis.TextViewer.WordWrap">
            <summary></summary>
        </member>
        <member name="F:NBagOfUis.TextViewer._rtb">
            <summary>Contained control.</summary>
        </member>
        <member name="M:NBagOfUis.TextViewer.#ctor">
            <summary>
            Constructor sets some defaults.
            </summary>
        </member>
        <member name="M:NBagOfUis.TextViewer.Clear">
            <summary></summary>
        </member>
        <member name="M:NBagOfUis.TextViewer.AppendLine(System.String)">
            <summary>
            A message to display to the user. Adds EOL.
            </summary>
            <param name="text">The message.</param>
        </member>
        <member name="M:NBagOfUis.TextViewer.AppendText(System.String)">
            <summary>
            A message to display to the user. Doesn't add EOL.
            </summary>
            <param name="text">The message.</param>
        </member>
        <member name="T:NBagOfUis.TimeBar">
            <summary>The control.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._length">
            <summary>Total length.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._current">
            <summary>Current time/position.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._start">
            <summary>One marker.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._end">
            <summary>Other marker.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._lastXPos">
            <summary>For tracking mouse moves.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._toolTip">
            <summary>Tooltip for mousing.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._brush">
            <summary>The brush.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._penMarker">
            <summary>The pen.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar.LARGE_CHANGE">
            <summary>Constant.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar.SMALL_CHANGE">
            <summary>Constant.</summary>
        </member>
        <member name="F:NBagOfUis.TimeBar.TS_FORMAT">
            <summary>For viewing purposes.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.Current">
            <summary>Where we be now.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.Length">
            <summary>Total length.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.Start">
            <summary>One marker.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.End">
            <summary>Other marker.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.SnapMsec">
            <summary>Snap to this increment value.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.ProgressColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.MarkerColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.FontLarge">
            <summary>Big font.</summary>
        </member>
        <member name="P:NBagOfUis.TimeBar.FontSmall">
            <summary>Baby font.</summary>
        </member>
        <member name="E:NBagOfUis.TimeBar.CurrentTimeChanged">
            <summary>Value changed by user.</summary>
        </member>
        <member name="M:NBagOfUis.TimeBar.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.TimeBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.TimeBar.IncrementCurrent(System.Int32)">
            <summary>
            Update current time.
            </summary>
            <param name="msec"></param>
        </member>
        <member name="M:NBagOfUis.TimeBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the slider.
            </summary>
        </member>
        <member name="M:NBagOfUis.TimeBar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle selection operations.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.TimeBar.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Hook to intercept keys.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.TimeBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse position changes.
            </summary>
        </member>
        <member name="M:NBagOfUis.TimeBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle dragging.
            </summary>
        </member>
        <member name="M:NBagOfUis.TimeBar.GetTimeFromMouse(System.Int32)">
            <summary>
            Convert x pos to TimeSpan.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:NBagOfUis.TimeBar.DoSnap(System.Int32)">
            <summary>
            Snap to user preference.
            </summary>
            <param name="msec"></param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.TimeBar.Constrain(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Utility helper function.
            </summary>
            <param name="val"></param>
            <param name="lower"></param>
            <param name="upper"></param>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.TimeBar.Scale(System.TimeSpan)">
            <summary>
            Map from time to UI pixels.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:NBagOfUis.StringListEditor">
            <summary>Generic property editor for lists of strings.</summary>
        </member>
        <member name="T:NBagOfUis.MonospaceFontEditor">
            <summary>Selector for monospaced fonts.</summary>
        </member>
        <member name="T:NBagOfUis.PathListEditor_Future">
            <summary>Broken - don't use.</summary>
        </member>
        <member name="T:NBagOfUis.CheckBoxRenderer">
            <summary>Custom renderer for toolstrip checkbox color.</summary>
        </member>
        <member name="P:NBagOfUis.CheckBoxRenderer.SelectedColor">
            <summary>Color to use when check box is selected.</summary>
        </member>
        <member name="M:NBagOfUis.CheckBoxRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Override for drawing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NBagOfUis.VirtualKeyboard">
            <summary>
            Virtual keyboard control borrowed from Leslie Sanford with extras.
            </summary>
        </member>
        <member name="P:NBagOfUis.VirtualKeyboard.ShowNoteNames">
            <summary>Draw the names on the keys.</summary>
        </member>
        <member name="T:NBagOfUis.VirtualKeyboard.KeyboardEventArgs">
            <summary>Device has received something.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKeyboard.KeyboardEventArgs.ChannelNumber">
            <summary>Channel number. Client can set it.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKeyboard.KeyboardEventArgs.NoteId">
            <summary>Midi note id.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKeyboard.KeyboardEventArgs.Velocity">
            <summary>Midi velocity. 0 means note off.</summary>
        </member>
        <member name="F:NBagOfUis.VirtualKeyboard._keys">
            <summary>All the created piano keys.</summary>
        </member>
        <member name="F:NBagOfUis.VirtualKeyboard._keyMap">
            <summary>Map from Keys value to the index in _keys.</summary>
        </member>
        <member name="F:NBagOfUis.VirtualKeyboard._keyDown">
            <summary>Known bug?</summary>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Keyboard_Load(System.Object,System.EventArgs)">
            <summary>
            Initialize everything.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Keyboard_Resize(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.IsNatural(System.Int32)">
            <summary>
            Is it a white key?
            </summary>
            <param name="notenum">Which note</param>
            <returns>True/false</returns>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.CreateKeyMap">
            <summary>
            Create the midi note/keyboard mapping.
            </summary>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Keyboard_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Use alpha keyboard to drive piano.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Keyboard_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Use alpha keyboard to drive piano.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.Keyboard_VKeyEvent(System.Object,NBagOfUis.VirtualKey.VKeyEventArgs)">
            <summary>
            Pass along an event from a virtual key.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.CreateKeys">
            <summary>
            Create the key controls.
            </summary>
        </member>
        <member name="M:NBagOfUis.VirtualKeyboard.DrawKeys">
            <summary>
            Re/draw the keys.
            </summary>
        </member>
        <member name="T:NBagOfUis.VirtualKey">
            <summary>One individual key.</summary>
        </member>
        <member name="F:NBagOfUis.VirtualKey._owner">
            <summary>Hook to owner.</summary>
        </member>
        <member name="F:NBagOfUis.VirtualKey._noteNames">
            <summary>For showing names.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKey.IsPressed">
            <summary>Key status.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKey.IsNatural">
            <summary>Key status.</summary>
        </member>
        <member name="P:NBagOfUis.VirtualKey.NoteId">
            <summary>Associated midi note.</summary>
        </member>
        <member name="T:NBagOfUis.VirtualKey.VKeyEventArgs">
            <summary>Notify handlers of key change.</summary>
        </member>
        <member name="M:NBagOfUis.VirtualKey.#ctor(NBagOfUis.VirtualKeyboard,System.Boolean,System.Int32)">
            <summary>
            Normal constructor.
            </summary>
            <param name="owner"></param>
            <param name="isNatural"></param>
            <param name="noteId"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.PressVKey(System.Int32)">
            <summary>
            
            </summary>
            <param name="velocity"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.ReleaseVKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:NBagOfUis.VirtualKey.CalcVelocity">
            <summary>
            Calc velocity from Y position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.VirtualKey.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NBagOfUis.WaitCursor">
            <summary>Class that provides a better wait cursor. Clients should use it with using (new WaitCursor()) { slow code }</summary>
        </member>
        <member name="F:NBagOfUis.WaitCursor.m_cursorOld">
            <summary>Restore original cursor</summary>
        </member>
        <member name="F:NBagOfUis.WaitCursor._start">
            <summary>For metrics</summary>
        </member>
        <member name="M:NBagOfUis.WaitCursor.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:NBagOfUis.WaitCursor.Dispose">
            <summary>Dispose</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._rawVals">
            <summary>From client.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._rawMax">
            <summary>Maximum value of _rawVals (+-).</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._scaledBuff">
            <summary>Storage for display.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._penDraw">
            <summary>For drawing.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._penMarker">
            <summary>For drawing.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._textFont">
            <summary>For drawing text.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._format">
            <summary>For drawing text.</summary>
        </member>
        <member name="F:NBagOfUis.WaveViewer._smplPerPixel">
            <summary>Ratio of data point to visual point.</summary>
        </member>
        <member name="P:NBagOfUis.WaveViewer.DrawColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.WaveViewer.MarkerColor">
            <summary>For styling.</summary>
        </member>
        <member name="P:NBagOfUis.WaveViewer.Mode">
            <summary>How to draw.</summary>
        </member>
        <member name="P:NBagOfUis.WaveViewer.Marker1">
            <summary>Marker 1 data index or -1 to disable.</summary>
        </member>
        <member name="P:NBagOfUis.WaveViewer.Marker2">
            <summary>Marker 2 data index or -1 to disable.</summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.WaveViewer_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NBagOfUis.WaveViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NBagOfUis.WaveViewer.Init(System.Single[],System.Single)">
            <summary>
            Populate with data.
            </summary>
            <param name="vals"></param>
            <param name="max"></param>
        </member>
        <member name="M:NBagOfUis.WaveViewer.Reset">
            <summary>
            Hard reset.
            </summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the waveform.
            </summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.Rescale">
            <summary>
            Scale raw values to fit in available space.
            </summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.OnResize(System.EventArgs)">
            <summary>
            Update drawing area.
            </summary>
        </member>
        <member name="M:NBagOfUis.WaveViewer.Dump(System.Single[],System.String)">
            <summary>
            Simple utility.
            </summary>
            <param name="data"></param>
            <param name="fn"></param>
        </member>
    </members>
</doc>
