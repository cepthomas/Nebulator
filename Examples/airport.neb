
// A take on Eno's Music for Airports - ported from github.com/teropa/musicforairports.js


///// Constants /////
constant SOUND_DEF_VOL 100

///// Variables /////
variable COLOR 240 // change color
variable MODF 100 // modulate filter - linked in reaper project
variable PITCH 8192 // center is 8192

///// Realtime Controllers /////
midictlin  MI1 1 4 MODF
midictlout MO1 1 Pitch PITCH
midictlout MO2 1 4 MODF

////// Levers //////
lever L1 0 255 COLOR
lever L2 0 16383 PITCH // max range
lever L3 0 255 MODF

///// Tracks /////
track SOUND 1 5 0 0

///// Functions /////
class TapeLoop
{
    public string snote;
    public Time duration;
    public Time delay;
    public Time nextStart;
    public TapeLoop(string nt, double dur, double del)
    {
        snote = nt;
        duration = new Time(dur);
        delay =  new Time(del);
        nextStart =  new Time(del);
    }
}

List<TapeLoop> loops = new List<TapeLoop>();

public override void setup()
{
    println("setup()");

    loops.Clear();
    // Key is Ab.
    loops.Add(new TapeLoop("Ab4", 17.80,  8.10));
    loops.Add(new TapeLoop("Ab5", 17.70,  3.10));
    // 3rd
    loops.Add(new TapeLoop("C5",  21.30,  5.60));
    // 4th
    loops.Add(new TapeLoop("Db5", 18.50, 12.60));
    // 5th
    loops.Add(new TapeLoop("Eb5", 20.00,  9.20));
    // 6th
    loops.Add(new TapeLoop("F4",  19.70,  4.00));
    loops.Add(new TapeLoop("F5",  20.00, 14.10));

    if(winGm)
    {
        sendPatch(SOUND, Pad2Warm);
    }
}

public override void step()
{
    foreach(TapeLoop l in loops)
    {
        if(stepTime >= l.nextStart)
        {
            sendMidiNote(SOUND, l.snote, SOUND_DEF_VOL, l.duration);
            // Calc next time.
            l.nextStart = stepTime + l.delay + l.duration;
        }
    }
}

public void On_MODF()
{
    println("MODF changed to", MODF);
    //modulate(SOUND, MODF);
}

public override void draw()
{
    background(COLOR, 100, 200);
    int dy = height / (loops.Count + 1);
    strokeCap(ROUND);

    for (int i = 0; i < loops.Count; i++)
    {
        TapeLoop loop = loops[i];
        int y = (i + 1) * dy;

        // Draw baseline.
        stroke(128);
        strokeWeight(2);
        line(10, y, width - 10, y);

        // Draw ball.
        int radius = 40;
        strokeWeight(3);

        int total = (loop.duration + loop.delay).TotalTocks;
        int pos = stepTime.TotalTocks % total;

        if(pos >= 0)
        {
            float x = width * pos / total;

            if(pos < loop.delay.TotalTocks)
            {
                fill(220);
            }
            else 
            {
                fill(20, 240, 100);
            }

            ellipse(x, y, radius, radius);

            fill(40, 10, 200);
            textSize(10); 
            text(loop.snote, x - 15, y - 10);
        }
    }
}

public override void mouseClicked()
{
    // Maybe do something?
    //int sn = (int)map(mouseX, 0, width, scaleNotes[0], scaleNotes[scaleNotes.Length-1]);
    //sendMidiNote(SOUND, sn, 90, 0.48);
}
