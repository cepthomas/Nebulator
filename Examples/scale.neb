
///// Scale helper class and utilities /////

public class Scale
{
    int _count = 0;
    double[] _scaleNotes;
    int[] _noteWeights;
    int _totalWeight = 100;
    int _down = 0;
    int _up = 0;

    public Scale(string scale, string root, int octDown, int octUp)
    {
        _scaleNotes = s.GetScaleNotes(scale, root);
        _count = _scaleNotes.Count();
        _noteWeights = new int[_count];
        _down = octDown;
        _up = octUp;

        // Set default weights.
        for(int i = 0; i < _count; i++)
        {
            _noteWeights[i] = 100 / _count;
        }        
    }

    public void setWeight(int index, int weight)
    {
        if(index < _count)
        {
            _noteWeights[index] = weight;
        }

        // Recalc total weight.
        _totalWeight = 0;
        for(int i = 0; i < _count; i++)
        {
            _totalWeight += _noteWeights[i];
        }        
    }

    public double randomNote()
    {
        double note = 0;
        double r = s.random(_totalWeight);
        
        int offset = 0;

        for(int i = 0; i < _count; i++)
        {
            offset += _noteWeights[i];
            if(r < offset)
            {
                note = _scaleNotes[i];
                break;
            }
        }

        // Which octave?
        int oct = s.random(0, 3) - 1;
        note += oct * 12;

        return note;
    }
}
