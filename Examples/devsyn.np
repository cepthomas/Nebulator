
// Akai kbd midi: Pad1-8 are notes 44-51, knob1-8 are controllers ctlr1-8.

// IO devices.
string VKEY_IN = "VKEY:";
string MIDI_IN = "MIDI:MPK mini";
string SYNTH_OUT = "OSC:127.0.0.1:1234";


// All the neb variables.
NVariable BACK_COLOR;
NVariable MOD1;
NVariable KBD_NOTE;
NVariable VKBD_NOTE;
NVariable CTL2;
NVariable CTL3;

// All the output channels.
NChannel SYNTH_MAIN;

// Use virtual kbd.
bool _minimal = true;

///// Event handlers /////
public void On_KBD_NOTE()
{
    // Test for note on or off.
    if(KBD_NOTE.Value > 0)
    {
        //syn.NoteOn(KBD_NOTE.Value, 0.9);
    }
    else
    {
        //syn.NoteOff(KBD_NOTE.Value);
    }
}

public void On_VKBD_NOTE()
{
    // Test for note on or off.
    if(VKBD_NOTE.Value > 0)
    {
        //syn.NoteOn(VKBD_NOTE.Value, 0.9);
    }
    else
    {
        //syn.NoteOff(VKBD_NOTE.Value);
    }
}

public void On_MOD1()
{
    //print(MOD1.Value);

    //syn.lpf.Freq = 200 + MOD1.Value * 50;
    //syn.bpf.Freq = 200 + MOD1.Value * 50;
}

public void On_CTL2()
{

}

public void On_CTL3()
{
    if(random(0, 10) == 0)
    {
        //syn.NoteOn(50 + CTL3.Value % 20, 0.7);
    }
}

public void On_BACK_COLOR()
{
    //print(BACK_COLOR.Name, "changed to", BACK_COLOR.Value);
}


///// Start neb /////
public override void setup()
{
    // All the neb variables.
    CTL2 = createVariable("ctl2", 200, 0, 255, On_CTL2);
    CTL3 = createVariable("ctl3", 200, 0, 255, On_CTL3);
    BACK_COLOR = createVariable("color", 200, 0, 255, On_BACK_COLOR);
    MOD1 = createVariable("mod", 127, 0, 255, On_MOD1);
    KBD_NOTE = createVariable("note", 60, -127, 127, On_KBD_NOTE); // note neg number for note off encoding
    VKBD_NOTE = createVariable("note", 60, -127, 127, On_VKBD_NOTE);

    // All the output channels.
    SYNTH_MAIN = createChannel("syn", SYNTH_OUT, 1);
    setWobbler(SYNTH_MAIN, 0.2);

    // All the inputs.
    if(_minimal)
    {
        createController(VKEY_IN, 1, NoteControl, VKBD_NOTE);
    }
    else
    {
        createController(MIDI_IN, 1, 1, MOD1); // modulate eq
        createController(MIDI_IN, 1, 2, CTL2); // since I don't have a pitch knob, I'll use this instead
        createController(MIDI_IN, 1, 3, CTL3); // another controller
        createController(MIDI_IN, 1, 4, BACK_COLOR); // change ui color
        createController(MIDI_IN, 1, NoteControl, KBD_NOTE); // noteOn/Off
    }

    // levers
    createLever(BACK_COLOR);
    createLever(MOD1);
}

public override void setupNeb2()
{
    // Post device creation.
}

///// Neb runtime /////
public override void step()
{
    // if(tock % 4 == 0 && random(7) == 0) // play with these for how often
    // {
    //     int notenum = random(40, 80);
    //     int dur = random(1, 8);
    //     syn.Note(notenum, random(0.6, 0.9));
    // }
}
