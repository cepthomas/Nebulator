

// File | Description
// ---- | -----------
// lsys.neb | Fooling around with L-System graphics. No sound yet.
// scale.neb | Example of a library file for class definition.
// *.nebp | Storage for dynamic stuff. This is created and managed by the application and not generally manually edited.
// temp\*.cs | Generated C# files which are compiled and executed.
// example.mp3 | A bit of some generated sound (not music!) using Reaper with good instruments and lots of reverb. I like lots of reverb.
// airport.mp3 | Snippet generated by example.neb and Reaper.




// Stuff to (probably) implement in neb files. Make some "library" files.



// Modulate to a specified key. Requires specifying current key too.



// Generators - something like this:
// ---------------
// AI Inverse Pentatonic: AI Generator over the pentatonic scale with tonal inversion
// AI Inverse Scale:: AI Generator over the selected tones with tonal inversion
// AI Inverse: AI Generator over white notes with tonal inversion
// AI Pentatonic: Artificial Intelligence Generator over the pentatonic scale
// AI Scale: Artificial Intelligence Generator over the selected tones
// AI White Notes: Artificial Intelligence Generator over white notes
// Cellular Automata I: Notes comes from the cell values of the Heat Cellular Automata.
// Cellular Automata II: Notes comes from a cell value of the Heat Cellular Automata in time.
// Cellular Automata III: Variation of the Heat Cellular Automata Generator.
// Cellular Automata IV: Variation of the Heat Cellular Automata Generator in time.
// Harmonic Oscillator: Simple Harmonic Oscillator
// Lyapunov Fractal: Generate notes from the Lyapunov Fractal iteration
// Markov Chains: Simple tone generator using Markov Chains
// Normalized AI Inverse Pentatonic: Normalized AI Generator over the pentatonic scale with tonal inversion
// Normalized AI Inverse Scale: Normalized AI Generator over the selected tones with tonal inversion
// Normalized AI Inverse: Normalized AI Generator over white notes with tonal inversion
// Pattern II: Multi tonal repetitive pattern
// Pattern: Simple repetitive tonal pattern
// Pentatonic Markov Chain: Markov Chain generator over the pentatonic scale
// Pentatonic Walk I: Random Walk over the pentatonic scale
// Pentatonic Walk II: Weighted Random Walk over the pentatonic scale
// Pentatonic Walk III: Variation of the Weighted Random Walk over the pentatonic scale
// Random Walk II: Random Walk over selected tones
// Random Walk: Simple Random Walk generator
// Random: Creates a random sequence of notes
// Sine Wave: Notes are created from a sinusoidal curve
// Symmetric Random Walk: Uses a symmetrical version of the Random Walk algorithm
// Tone Walk I: Random walk using Tonnetz
// Tone Walk II: Weighted Random Walk using Tonnetz
// Tone Walk III: Variation of the Random Walk using Tonnetz
// 
// Transformations
// -------------------
// First Half 1 Octave Down: The second half contains the notes of the first half lowered one octave.
// First Half 1 Octave Up: The second half contains the notes of the first half raised one octave.
// First Half Mirrored, 1 Octave Down: The second half contains the notes of the first half lowered one octave but reversed in time.
// First Half Mirrored, 1 Octave Up: The second half contains the notes of the first half raised one octave but reversed in time.
// First Half Mirrored, 1 Octave Up: The second half contains the notes of the first half raised one octave but reversed in time.
// Mirror First Half: The first half of the Base Pattern is mirrored in the second half
// Mirror Second Half: The second half of the Base Pattern is mirrored on the first half
// No Transformation: No Transformation is applied to the current Base Pattern
// One Octave Down, Period 16: The tone of the note is lowered one octave every 16 notes during the next 16 notes.
// One Octave Down, Period 32: The tone of the note is lowered one octave every 32 notes during the next 32 notes.
// One Octave Up, Period 16: The tone of the note is raised one octave every 16 notes during the next 16 notes.
// One Octave Up, Period 32: The tone of the note is raised one octave every 32 notes during the next 32 notes.
// Period One Round Wave: The tone of the note is affected by the amplitude of the round wave.
// Period One Sine Wave: The tone of the note is affected by the amplitude of the sinusoidal wave.
// Period One Triangular Wave: The tone of the note is affected by the amplitude of the triangular wave.
// Period Two Round Wave: The tone of the note is affected by the amplitude of the round wave with double frequency.
// Period Two Sine Wave: The tone of the note is affected by the amplitude of the sinusoidal wave with double frequency.
// Period Two Triangular Wave: The tone of the note is affected by the amplitude of the triangular wave with double // frequency.
// Second Half Mirrored, 1 Octave Down: The first half contains the notes of the second half lowered one octave but // reversed in time.
// Second Half Mirrored, 1 Octave Up: The first half contains the notes of the second half raised one octave but reversed // in time.
// Time Reversed: The whole base pattern is reversed in time.





/// Support microtonal notes with Pitch changes.
// The two bytes of the pitch bend message form a 14 bit number, 0 to 16383. The value 8192 (sent, LSB first, as 0x00 0x40), is centered, or "no pitch bend." The value 0 (0x00 0x00) means, "bend as low as possible," and, similarly, 16383 (0x7F 0x7F) is to "bend as high as possible." The exact range of the pitch bend is specific to the synthesizer. 
// 
// Pitch Bend Range: 
// RPN LSB = 0: Bn 64 00 
// RPN MSB = 0: Bn 65 00 
// Data MSB: Bn 06 mm (mm sets bend range in semitones. mm can be from 00 to 18 for 0 to 24 (+/- 12) semitones both up and down) 
// Data LSB=0 (usually not required): Bn 26 00
// So to set Pitch Bend Range to +/- 12 semitones:
// HEX        ;  DECIMAL
// Bn 65 00 ; 101  00 MSB
// Bn 64 00 ; 100 00 LSB
// Bn 06 18 ; 06 24 MSB
// Bn 26 00 ; 38 00 LSB
// 
// RPN & NRPN Reset:
// RPN LSB = 7F: Bn 64 7F 
// RPN MSB = 7F: Bn 65 7F 
// Send this alone (no data messages) immediately after all other RPN and NRPN messages have been sent.          


